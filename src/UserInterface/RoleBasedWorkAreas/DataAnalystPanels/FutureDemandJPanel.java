/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.RoleBasedWorkAreas.DataAnalystPanels;

import Business.Models.CropSalesRelation;
import Utils.HistoricalData;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author kpraneeth
 */
public class FutureDemandJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FutureDemandJPanel
     */
   public static HashMap<Integer, ArrayList<CropSalesRelation>> futureMarketData;
    private ChartPanel chartPanel;
    public FutureDemandJPanel() {
        
//        checking();
        initComponents();
        futureMarketData = HistoricalData.futureMarketData;
        checking(2023);
        checking(2024);
        checking(2025);
//         yearsComboBox.addItem("2023");
//        yearsComboBox.addItem("2024");
//        yearsComboBox.addItem("2025");
//        yearsComboBox.setSelectedIndex(0);
//         yearsComboBox.addActionListener(new java.awt.event.ActionListener() {
//        public void actionPerformed(java.awt.event.ActionEvent evt) {
//            
////         yearsComboBox.setSelectedIndex(0);
//  System.out.println("calling before");
////         yearsComboBoxActionPerformed(evt);
//         
//        
//        }
//    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Future");
        add(jLabel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

   private void checking(int year) {
        System.out.println("calling this " + year);

        DefaultCategoryDataset def = new DefaultCategoryDataset();
        ArrayList<CropSalesRelation> cropSalesList = futureMarketData.get(year);
        if (cropSalesList != null) {
            for (CropSalesRelation cropSalesRelation : cropSalesList) {
                String cropName = cropSalesRelation.getCrop().getName();
                int quantity = cropSalesRelation.getSales().getQuantity();
                def.setValue(quantity, "Quantity", cropName);
            }
        }

        JFreeChart barchart = ChartFactory.createAreaChart("Market Based", "Crops - " + year, "Quantity", def,
                PlotOrientation.VERTICAL, false, true, false);

        CategoryPlot bar = barchart.getCategoryPlot();
        bar.setRangeGridlinePaint(Color.GREEN);

        ChartFrame frame = new ChartFrame("Bar chart", barchart);
        frame.setVisible(true);
        frame.setSize(450, 300);
    }




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
